{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thien\\\\Desktop\\\\coreui-free-react-admin-template-main\\\\client\\\\src\\\\components\\\\AppSidebarNav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { CBadge } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const AppSidebarNav = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const location = useLocation();\n\n  const navLink = (name, icon, badge) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [icon && icon, name && name, badge && /*#__PURE__*/_jsxDEV(CBadge, {\n        color: badge.color,\n        className: \"ms-auto\",\n        children: badge.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true);\n  };\n\n  const navItem = (item, index) => {\n    const {\n      component,\n      name,\n      badge,\n      icon,\n      ...rest\n    } = item;\n    const Component = component;\n    return /*#__PURE__*/_createElement(Component, { ...(rest.to && !rest.items && {\n        component: NavLink\n      }),\n      key: index,\n      ...rest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, navLink(name, icon, badge));\n  };\n\n  const navGroup = (item, index) => {\n    var _item$items;\n\n    const {\n      component,\n      name,\n      icon,\n      to,\n      ...rest\n    } = item;\n    const Component = component;\n    return /*#__PURE__*/_jsxDEV(Component, {\n      idx: String(index),\n      toggler: navLink(name, icon),\n      visible: location.pathname.startsWith(to),\n      ...rest,\n      children: (_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.map((item, index) => item.items ? navGroup(item, index) : navItem(item, index))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: items && items.map((item, index) => item.items ? navGroup(item, index) : navItem(item, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppSidebarNav, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppSidebarNav;\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppSidebarNav\");","map":{"version":3,"sources":["C:/Users/thien/Desktop/coreui-free-react-admin-template-main/client/src/components/AppSidebarNav.js"],"names":["React","PropTypes","NavLink","useLocation","CBadge","AppSidebarNav","items","location","navLink","name","icon","badge","color","text","navItem","item","index","component","rest","Component","to","navGroup","String","pathname","startsWith","map","propTypes","arrayOf","any","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,eAAvB;;;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,KAAuB;AACnC,wBACI;AAAA,iBACKD,IAAI,IAAIA,IADb,EAEKD,IAAI,IAAIA,IAFb,EAGKE,KAAK,iBAAK,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAK,CAACC,KAArB;AAA4B,QAAA,SAAS,EAAC,SAAtC;AAAA,kBACND,KAAK,CAACE;AADA;AAAA;AAAA;AAAA;AAAA,cAHf;AAAA,oBADJ;AASH,GAVD;;AAYA,QAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAM;AAAEC,MAAAA,SAAF;AAAaR,MAAAA,IAAb;AAAmBE,MAAAA,KAAnB;AAA0BD,MAAAA,IAA1B;AAAgC,SAAGQ;AAAnC,QAA4CH,IAAlD;AACA,UAAMI,SAAS,GAAGF,SAAlB;AACA,wBACI,eAAC,SAAD,QACSC,IAAI,CAACE,EAAL,IACD,CAACF,IAAI,CAACZ,KADL,IACc;AACfW,QAAAA,SAAS,EAAEf;AADI,OAFvB;AAKI,MAAA,GAAG,EAAEc,KALT;AAAA,SAMQE,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKV,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,CARZ,CADJ;AAYH,GAfD;;AAgBA,QAAMU,QAAQ,GAAG,CAACN,IAAD,EAAOC,KAAP,KAAiB;AAAA;;AAC9B,UAAM;AAAEC,MAAAA,SAAF;AAAaR,MAAAA,IAAb;AAAmBC,MAAAA,IAAnB;AAAyBU,MAAAA,EAAzB;AAA6B,SAAGF;AAAhC,QAAyCH,IAA/C;AACA,UAAMI,SAAS,GAAGF,SAAlB;AACA,wBACI,QAAC,SAAD;AACI,MAAA,GAAG,EAAEK,MAAM,CAACN,KAAD,CADf;AAGI,MAAA,OAAO,EAAER,OAAO,CAACC,IAAD,EAAOC,IAAP,CAHpB;AAII,MAAA,OAAO,EAAEH,QAAQ,CAACgB,QAAT,CAAkBC,UAAlB,CAA6BJ,EAA7B,CAJb;AAAA,SAKQF,IALR;AAAA,+BAOKH,IAAI,CAACT,KAPV,gDAOK,YAAYmB,GAAZ,CAAgB,CAACV,IAAD,EAAOC,KAAP,KACbD,IAAI,CAACT,KAAL,GAAae,QAAQ,CAACN,IAAD,EAAOC,KAAP,CAArB,GAAqCF,OAAO,CAACC,IAAD,EAAOC,KAAP,CAD/C;AAPL,OAESA,KAFT;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAhBD;;AAiBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKV,KAAK,IACFA,KAAK,CAACmB,GAAN,CAAU,CAACV,IAAD,EAAOC,KAAP,KAAkBD,IAAI,CAACT,KAAL,GAAae,QAAQ,CAACN,IAAD,EAAOC,KAAP,CAArB,GAAqCF,OAAO,CAACC,IAAD,EAAOC,KAAP,CAAxE;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArDM;;GAAMX,a;UACQF,W;;;KADRE,a;AAsDbA,aAAa,CAACqB,SAAd,GAA0B;AACtBpB,EAAAA,KAAK,EAAEL,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,GAA5B,EAAiCC;AADlB,CAA1B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { CBadge } from '@coreui/react';\r\n\r\nexport const AppSidebarNav = ({ items }) => {\r\n    const location = useLocation()\r\n    const navLink = (name, icon, badge) => {\r\n        return (\r\n            <>\r\n                {icon && icon}\r\n                {name && name}\r\n                {badge && (<CBadge color={badge.color} className='ms-auto'>\r\n                    {badge.text}\r\n                </CBadge>)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const navItem = (item, index) => {\r\n        const { component, name, badge, icon, ...rest } = item\r\n        const Component = component\r\n        return (\r\n            <Component\r\n                {...(rest.to &&\r\n                    !rest.items && {\r\n                    component: NavLink,\r\n                })}\r\n                key={index}\r\n                {...rest}\r\n            >\r\n                {navLink(name, icon, badge)}\r\n            </Component>\r\n        )\r\n    }\r\n    const navGroup = (item, index) => {\r\n        const { component, name, icon, to, ...rest } = item\r\n        const Component = component\r\n        return (\r\n            <Component\r\n                idx={String(index)}\r\n                key={index}\r\n                toggler={navLink(name, icon)}\r\n                visible={location.pathname.startsWith(to)}\r\n                {...rest}\r\n            >\r\n                {item.items?.map((item, index) =>\r\n                    item.items ? navGroup(item, index) : navItem(item, index),\r\n                )}\r\n            </Component>\r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {items &&\r\n                items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\r\n        </React.Fragment>\r\n    )\r\n};\r\nAppSidebarNav.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}