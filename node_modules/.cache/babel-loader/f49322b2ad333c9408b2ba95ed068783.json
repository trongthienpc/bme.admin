{"ast":null,"code":"var _jsxFileName = \"/Users/thientt/Documents/coding-project/server-frontend/bme.admin/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport { authReducer } from '../reducer/authReducer';\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from './constant';\nimport setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthenticated: false,\n    user: null\n  });\n\n  const loadUser = async () => {\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n    try {\n      const response = await axios.get(`${apiUrl}/auth`);\n\n      if (response.data.success) {\n        dispatch({\n          type: 'SET_AUTH',\n          payload: {\n            isAuthenticated: true,\n            user: response.data.user\n          }\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      setAuthToken(null);\n      dispatch({\n        type: 'SET_AUTH',\n        payload: {\n          isAuthenticated: false,\n          user: null\n        }\n      });\n    }\n  };\n\n  useEffect(() => loadUser(), []); // Login\n\n  const loginContext = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      await loadUser();\n      console.log(authState);\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  }; // Register\n\n\n  const registerContext = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      await loadUser();\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  }; // Logout\n\n\n  const logoutUser = () => {\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    dispatch({\n      type: 'SET_AUTH',\n      payload: {\n        isAuthenticated: false,\n        user: null\n      }\n    });\n  }; // Context data\n\n\n  const authContextData = {\n    loginContext,\n    registerContext,\n    logoutUser,\n    authState\n  }; // Return provider\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"jsmttX3PcbyFlgs/7pXaLnN779E=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/thientt/Documents/coding-project/server-frontend/bme.admin/src/context/AuthContext.js"],"names":["React","createContext","useEffect","useReducer","authReducer","apiUrl","LOCAL_STORAGE_TOKEN_NAME","setAuthToken","axios","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthenticated","user","loadUser","localStorage","response","get","data","success","type","payload","error","removeItem","loginContext","userForm","post","setItem","accessToken","console","log","message","registerContext","logoutUser","authContextData"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react';\nimport { authReducer } from '../reducer/authReducer'\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from './constant'\nimport setAuthToken from '../utils/setAuthToken'\nimport axios from 'axios';\n\nexport const AuthContext = createContext()\nconst AuthContextProvider = ({ children }) => {\n\n    const [authState, dispatch] = useReducer(authReducer, {\n        authLoading: true,\n        isAuthenticated: false,\n        user: null\n    })\n\n    const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\n            setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME])\n\n        try {\n            const response = await axios.get(`${apiUrl}/auth`)\n            if (response.data.success) {\n                dispatch({\n                    type: 'SET_AUTH',\n                    payload: {\n                        isAuthenticated: true,\n                        user: response.data.user\n                    }\n                })\n            }\n        } catch (error) {\n            localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\n            setAuthToken(null)\n            dispatch({\n                type: 'SET_AUTH',\n                payload: {\n                    isAuthenticated: false,\n                    user: null\n                }\n            })\n        }\n    }\n\n    useEffect(() => loadUser(), [])\n\n    // Login\n    const loginContext = async userForm => {\n        try {\n            const response = await axios.post(`${apiUrl}/auth/login`, userForm)\n            if (response.data.success)\n                localStorage.setItem(\n                    LOCAL_STORAGE_TOKEN_NAME,\n                    response.data.accessToken\n                )\n\n\n            await loadUser()\n            console.log(authState)\n            return response.data\n        } catch (error) {\n            if (error.response.data) return error.response.data\n            else return { success: false, message: error.message }\n        }\n    }\n\n    // Register\n    const registerContext = async userForm => {\n        try {\n            const response = await axios.post(`${apiUrl}/auth/register`, userForm)\n            if (response.data.success)\n                localStorage.setItem(\n                    LOCAL_STORAGE_TOKEN_NAME,\n                    response.data.accessToken\n                )\n\n            await loadUser()\n\n            return response.data\n        } catch (error) {\n            if (error.response.data) return error.response.data\n            else return { success: false, message: error.message }\n        }\n    }\n\n    // Logout\n    const logoutUser = () => {\n        localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\n        dispatch({\n            type: 'SET_AUTH',\n            payload: { isAuthenticated: false, user: null }\n        })\n    }\n\n    // Context data\n    const authContextData = { loginContext, registerContext, logoutUser, authState }\n\n    // Return provider\n    return (\n        <AuthContext.Provider value={authContextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider"]},"metadata":{},"sourceType":"module"}