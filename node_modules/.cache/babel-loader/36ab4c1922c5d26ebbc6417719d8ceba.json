{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thien\\\\Desktop\\\\coreui-free-react-admin-template-main\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport Login from './components/views/pages/login/Login';\nimport Register from './components/views/pages/register/Register';\nimport { AuthContext } from './context/AuthContext';\nimport Dashboard from './components/views/dashboard/dashboard';\nimport About from './components/views/pages/about/about';\nimport RoomStyle from './components/views/pages/room/roomStyle';\nimport RoomDetail from './components/views/pages/room/roomDetail';\nimport Page404 from './components/views/pages/page404/page404';\nimport { useStore, actions } from './store/index';\nimport './scss/style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefaultLayout = /*#__PURE__*/React.lazy(_c = () => import('./layout/default'));\n_c2 = DefaultLayout;\n\nfunction RequireAuth(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    authState: {\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n  let location = useLocation();\n  console.log(isAuthenticated);\n\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n}\n\n_s(RequireAuth, \"K+0yC/03doFFCB8cWxZQRWFxQkw=\", false, function () {\n  return [useLocation];\n});\n\n_c3 = RequireAuth;\n\nconst loading = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"pt-3 text-center\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sk-spinner sk-spinner-pulse\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this);\n\nfunction App() {\n  _s2();\n\n  const [storeState, dispatch] = useStore();\n  const {\n    todos,\n    todoInput\n  } = storeState;\n\n  const handleAdd = () => {\n    dispatch(actions.addTodo(todoInput));\n  };\n\n  return (\n    /*#__PURE__*/\n    // todo app\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: todoInput,\n        placeholder: \"enter here\",\n        onChange: e => {\n          dispatch(actions.setTodoInput(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this) // <React.Suspense fallback={loading}>\n    //   <Routes>\n    //     <Route\n    //       exact\n    //       path='/'\n    //       element={\n    //         <RequireAuth>\n    //           <DefaultLayout />\n    //         </RequireAuth>\n    //       }>\n    //       <Route index element={<Dashboard />} />\n    //       <Route path='/about' element={<About />} />\n    //       <Route path='/roomStyle' element={<RoomStyle />} />\n    //       <Route path='/roomDetail' element={<RoomDetail />} />\n    //     </Route>\n    //     <Route path='/login' element={<Login />} />\n    //     <Route exact\n    //       path='/register'\n    //       element={<Register />}\n    //     />\n    //     <Route\n    //       exact path=\"*\"\n    //       element={<Page404 />}\n    //     />\n    //   </Routes>\n    // </React.Suspense>\n\n  );\n}\n\n_s2(App, \"ZwEU35GVUCbul03gcmNGxbwkL5w=\", false, function () {\n  return [useStore];\n});\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DefaultLayout$React.lazy\");\n$RefreshReg$(_c2, \"DefaultLayout\");\n$RefreshReg$(_c3, \"RequireAuth\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/thien/Desktop/coreui-free-react-admin-template-main/client/src/App.js"],"names":["React","useContext","Navigate","Route","Routes","useLocation","Login","Register","AuthContext","Dashboard","About","RoomStyle","RoomDetail","Page404","useStore","actions","DefaultLayout","lazy","RequireAuth","children","authState","isAuthenticated","location","console","log","from","loading","App","storeState","dispatch","todos","todoInput","handleAdd","addTodo","e","setTodoInput","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,eAAlC;AAEA,OAAO,mBAAP;;AACA,MAAMC,aAAa,gBAAGhB,KAAK,CAACiB,IAAN,MAAW,MAAM,OAAO,kBAAP,CAAjB,CAAtB;MAAMD,a;;AACN,SAASE,WAAT,OAAmC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACjC,QAAM;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAb,MAAqCpB,UAAU,CAACO,WAAD,CAArD;AAEA,MAAIc,QAAQ,GAAGjB,WAAW,EAA1B;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;;AAEA,MAAI,CAACA,eAAL,EAAsB;AAEpB;AACA;AACA;AACA;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAEH;AAAR,OAA7B;AAAiD,MAAA,OAAO;AAAxD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOH,QAAP;AACD;;GAjBQD,W;UAGQb,W;;;MAHRa,W;;AAkBT,MAAMQ,OAAO,gBACX;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA,yBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAMA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBf,QAAQ,EAAvC;AACA,QAAM;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBH,UAA7B;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBH,IAAAA,QAAQ,CAACd,OAAO,CAACkB,OAAR,CAAgBF,SAAhB,CAAD,CAAR;AACD,GAFD;;AAIA;AAAA;AAEE;AACA;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEA,SAAd;AACE,QAAA,WAAW,EAAC,YADd;AAEE,QAAA,QAAQ,EAAEG,CAAC,IAAI;AACbL,UAAAA,QAAQ,CAACd,OAAO,CAACoB,YAAR,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B,CAAD,CAAR;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CAeE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AA9CF;AAiDD;;IA3DQL,G;UAGwBb,Q;;;MAHxBa,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom'\nimport Login from './components/views/pages/login/Login';\nimport Register from './components/views/pages/register/Register';\nimport { AuthContext } from './context/AuthContext'\nimport Dashboard from './components/views/dashboard/dashboard'\nimport About from './components/views/pages/about/about'\nimport RoomStyle from './components/views/pages/room/roomStyle'\nimport RoomDetail from './components/views/pages/room/roomDetail'\nimport Page404 from './components/views/pages/page404/page404';\nimport { useStore, actions } from './store/index'\n\nimport './scss/style.scss'\nconst DefaultLayout = React.lazy(() => import('./layout/default'))\nfunction RequireAuth({ children }) {\n  const { authState: { isAuthenticated } } = useContext(AuthContext)\n\n  let location = useLocation();\n\n  console.log(isAuthenticated);\n\n  if (!isAuthenticated) {\n\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\nconst loading = (\n  <div className='pt-3 text-center'>\n    <div className='sk-spinner sk-spinner-pulse'></div>\n\n  </div>\n)\nfunction App() {\n\n\n  const [storeState, dispatch] = useStore()\n  const { todos, todoInput } = storeState\n\n  const handleAdd = () => {\n    dispatch(actions.addTodo(todoInput))\n  }\n\n  return (\n\n    // todo app\n    <div>\n      <input value={todoInput}\n        placeholder='enter here'\n        onChange={e => {\n          dispatch(actions.setTodoInput(e.target.value))\n        }} />\n\n      <button onClick={handleAdd}>Add</button>\n    </div>\n\n\n\n    // <React.Suspense fallback={loading}>\n    //   <Routes>\n    //     <Route\n    //       exact\n    //       path='/'\n    //       element={\n    //         <RequireAuth>\n    //           <DefaultLayout />\n    //         </RequireAuth>\n    //       }>\n    //       <Route index element={<Dashboard />} />\n    //       <Route path='/about' element={<About />} />\n    //       <Route path='/roomStyle' element={<RoomStyle />} />\n    //       <Route path='/roomDetail' element={<RoomDetail />} />\n    //     </Route>\n\n\n\n\n\n    //     <Route path='/login' element={<Login />} />\n    //     <Route exact\n    //       path='/register'\n    //       element={<Register />}\n    //     />\n    //     <Route\n    //       exact path=\"*\"\n    //       element={<Page404 />}\n    //     />\n\n    //   </Routes>\n    // </React.Suspense>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}